/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    // id("org.jetbrains.kotlin.jvm") version "1.7.20"

    // Apply the application plugin to add support for building a CLI application in Java.
    application
//    id("org.openjfx.javafxplugin") version "0.1.0"

    id("com.github.ben-manes.versions") version "0.51.0"
    id("com.dorongold.task-tree") version "4.0.0"
    kotlin("jvm") version "2.0.20"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

val KOTEST_VERSION = "5.9.1"
val logbackVersion = "1.5.16"

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    implementation("ch.qos.logback:logback-classic:$logbackVersion")
    implementation("ch.qos.logback:logback-core:$logbackVersion")
    implementation("ch.qos.logback:logback-core:$logbackVersion")
    implementation("com.google.code.gson:gson:2.11.0")
    implementation("com.google.guava:guava:33.4.0-jre")
    implementation("com.thoughtworks.xstream:xstream:1.4.21")
    implementation("commons-io:commons-io:2.18.0")
    implementation("org.apache.commons:commons-lang3:3.17.0")

    testImplementation("org.junit.jupiter:junit-jupiter:5.11.4")
    testRuntimeOnly ("org.junit.platform:junit-platform-launcher")

    // Use the Kotlin test library.
    //    testImplementation("org.jetbrains.kotlin:kotlin-test")
    // Use the Kotlin JUnit integration.
    //    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    // newer stuff
    //                testImplementation ("io.kotest:kotest-runner-junit5:$KOTEST_VERSION")
    //                testImplementation ("io.kotest:kotest-assertions-core:$KOTEST_VERSION")
    //                testImplementation ("io.kotest:kotest-property:$KOTEST_VERSION")
}

tasks.withType<Test>().configureEach {
    useJUnitPlatform()
}
application {
    // Define the main class for the application.
    mainClass.set("com.nurflugel.dependencyvisualizer.ui.LoadersUi")
    group = "com.nurflugel"
    version = "0.0.1-SNAPSHOT"
}

tasks.withType<Test>().configureEach {
    useJUnitPlatform()
}

kotlin {
//    jvmToolchain {
//        languageVersion.set(JavaLanguageVersion.of(<MAJOR_JDK_VERSION>))
//    }
//    // Or shorter:
//    jvmToolchain(<MAJOR_JDK_VERSION>)
    // For example:
    jvmToolchain(17)
}